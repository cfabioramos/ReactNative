{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\desenvolvimento\\\\workspace-estudo\\\\ReactNative\\\\confusion\\\\components\\\\DishdetailComponent.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Icon } from \"react-native-elements\";\nimport { COMMENTS } from \"../shared/comments\";\nimport { connect } from 'react-redux';\nimport { postFavorite as _postFavorite } from \"../redux/ActionCreators\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    favorites: state.favorites\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    postFavorite: function postFavorite(dishId) {\n      return dispatch(_postFavorite(dishId));\n    }\n  };\n};\n\nfunction RenderComments(props) {\n  var comments = props.comments;\n\n  var renderCommentItem = function renderCommentItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      key: index,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, item.comment), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, item.rating, \" Stars\"), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"-- \" + item.author + \", \" + item.date, \" \"));\n  };\n\n  return React.createElement(Card, {\n    title: \"Comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderCommentItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RenderDish(props) {\n  var dish = props.dish;\n  console.log(props.favorite);\n\n  if (dish != null) {\n    return React.createElement(Card, {\n      featuredTitle: dish.name,\n      image: require(\"./\" + dish.image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, dish.description), React.createElement(Icon, {\n      raised: true,\n      reverse: true,\n      name: props.favorite ? \"heart\" : \"heart-o\",\n      type: \"font-awesome\",\n      color: \"#f50\",\n      onPress: function onPress() {\n        return props.favorite ? console.log(\"Already favorite\") : props.onPress();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n}\n\nfunction main(_ref2) {\n  var route = _ref2.route;\n\n  var _useState = useState(COMMENTS),\n      _useState2 = _slicedToArray(_useState, 1),\n      comments = _useState2[0];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      favorites = _useState4[0],\n      setFavorites = _useState4[1];\n\n  var markFavorite = function markFavorite(dishId) {\n    if (!favorites.some(function (el) {\n      return el === dishId;\n    })) {\n      favorites.push(dishId);\n      setFavorites(_toConsumableArray(favorites));\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(RenderDish, {\n    dish: route.params.dish,\n    favorite: favorites.some(function (el) {\n      return el === route.params.dish.id;\n    }),\n    onPress: function onPress() {\n      return markFavorite(route.params.dish.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(RenderComments, {\n    comments: comments.filter(function (comment) {\n      return comment.dishId === route.params.dish.id;\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default connect()(main);","map":{"version":3,"sources":["C:/desenvolvimento/workspace-estudo/ReactNative/confusion/components/DishdetailComponent.js"],"names":["React","useState","Card","Icon","COMMENTS","connect","postFavorite","mapStateToProps","state","dishes","comments","favorites","mapDispatchToProps","dispatch","dishId","RenderComments","props","renderCommentItem","item","index","margin","fontSize","comment","rating","author","date","id","toString","RenderDish","dish","console","log","favorite","name","require","image","description","onPress","main","route","setFavorites","markFavorite","some","el","push","params","filter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, ScrollView, FlatList } from \"react-native\";\r\nimport { Card, Icon } from \"react-native-elements\";\r\nimport { COMMENTS } from \"../shared/comments\";\r\nimport { connect } from 'react-redux';\r\nimport { postFavorite } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      favorites: state.favorites\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postFavorite: (dishId) => dispatch(postFavorite(dishId))\r\n})\r\n\r\nfunction RenderComments(props) {\r\n  const comments = props.comments;\r\n  const renderCommentItem = ({ item, index }) => {\r\n    return (\r\n      <View key={index} style={{ margin: 10 }}>\r\n        <Text style={{ fontSize: 14 }}>{item.comment}</Text>\r\n        <Text style={{ fontSize: 12 }}>{item.rating} Stars</Text>\r\n        <Text style={{ fontSize: 12 }}>\r\n          {\"-- \" + item.author + \", \" + item.date}{\" \"}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card title=\"Comments\">\r\n      <FlatList\r\n        data={comments}\r\n        renderItem={renderCommentItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction RenderDish(props) {\r\n  const dish = props.dish;\r\n  console.log(props.favorite)\r\n  if (dish != null) {\r\n    return (\r\n      <Card featuredTitle={dish.name} image={require(`./${dish.image}`)}>\r\n        <Text style={{ margin: 10 }}>{dish.description}</Text>\r\n        <Icon\r\n          raised\r\n          reverse\r\n          name={props.favorite ? \"heart\" : \"heart-o\"}\r\n          type=\"font-awesome\"\r\n          color=\"#f50\"\r\n          onPress={() =>\r\n            props.favorite ? console.log(\"Already favorite\") : props.onPress()\r\n          }\r\n        />\r\n      </Card>\r\n    );\r\n  } else {\r\n    return <View></View>;\r\n  }\r\n}\r\n\r\nfunction main({ route }) {\r\n  const [comments] = useState(COMMENTS);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  const markFavorite = (dishId) => {\r\n    if ( !(favorites.some((el) => el === dishId)) ){\r\n      favorites.push(dishId);\r\n      setFavorites([...favorites])\r\n    }\r\n  } \r\n\r\n  return (\r\n    <ScrollView>\r\n      <RenderDish\r\n        dish={route.params.dish}\r\n        favorite={favorites.some((el) => el === route.params.dish.id)}\r\n        onPress={() => markFavorite(route.params.dish.id)}\r\n      />\r\n      <RenderComments\r\n        comments={comments.filter(\r\n          (comment) => comment.dishId === route.params.dish.id\r\n        )}\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nexport default connect()(main);\r\n"]},"metadata":{},"sourceType":"module"}