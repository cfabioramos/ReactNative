{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nexport var leaders = function leaders() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      });\n\n    case ActionTypes.LEADERS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      });\n\n    case ActionTypes.LEADERS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/desenvolvimento/workspace-estudo/ReactNative/confusion/redux/leaders.js"],"names":["ActionTypes","leaders","state","isLoading","errMess","action","type","ADD_LEADERS","payload","LEADERS_LOADING","LEADERS_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAGlB;AAAA,MAFHC,KAEG,uEAFK;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,OAAO,EAAE,IAA5B;AAAkCH,IAAAA,OAAO,EAAE;AAA3C,GAEL;AAAA,MADHI,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,WAAjB;AACE,6CACKL,KADL;AAEEC,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,OAAO,EAAE,IAHX;AAIEH,QAAAA,OAAO,EAAEI,MAAM,CAACG;AAJlB;;AAOF,SAAKR,WAAW,CAACS,eAAjB;AACE,6CAAYP,KAAZ;AAAmBC,QAAAA,SAAS,EAAE,IAA9B;AAAoCC,QAAAA,OAAO,EAAE,IAA7C;AAAmDH,QAAAA,OAAO,EAAE;AAA5D;;AAEF,SAAKD,WAAW,CAACU,cAAjB;AACE,6CAAYR,KAAZ;AAAmBC,QAAAA,SAAS,EAAE,KAA9B;AAAqCC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAArD;;AAEF;AACE,aAAON,KAAP;AAhBJ;AAkBD,CAtBM","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const leaders = (\r\n  state = { isLoading: true, errMess: null, leaders: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload,\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}