{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\desenvolvimento\\\\workspace-estudo\\\\ReactNative\\\\confusion\\\\components\\\\DishdetailComponent.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card } from \"react-native-elements\";\nimport { COMMENTS } from \"../shared/comments\";\n\nfunction RenderComments(props) {\n  var comments = props.comments;\n\n  var renderCommentItem = function renderCommentItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      key: index,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, item.comment), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, item.rating, \" Stars\"), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, \"-- \" + item.author + \", \" + item.date, \" \"));\n  };\n\n  return React.createElement(Card, {\n    title: \"Comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderCommentItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RenderDish(props) {\n  var dish = props.dish;\n\n  if (dish != null) {\n    return React.createElement(Card, {\n      featuredTitle: dish.name,\n      image: require(\"./\" + dish.image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, dish.description));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n}\n\nfunction main(_ref2) {\n  var route = _ref2.route;\n\n  var _useState = useState(COMMENTS),\n      _useState2 = _slicedToArray(_useState, 1),\n      comments = _useState2[0];\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(RenderDish, {\n    dish: route.params.dish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(RenderComments, {\n    comments: comments.filter(function (comment) {\n      return comment.dishId === route.params.dish.id;\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default main;","map":{"version":3,"sources":["C:/desenvolvimento/workspace-estudo/ReactNative/confusion/components/DishdetailComponent.js"],"names":["React","useState","Card","COMMENTS","RenderComments","props","comments","renderCommentItem","item","index","margin","fontSize","comment","rating","author","date","id","toString","RenderDish","dish","name","require","image","description","main","route","params","filter","dishId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, ScrollView, FlatList } from \"react-native\";\r\nimport { Card } from \"react-native-elements\";\r\nimport { COMMENTS } from \"../shared/comments\";\r\n\r\nfunction RenderComments(props) {\r\n  const comments = props.comments;\r\n  const renderCommentItem = ({ item, index }) => {\r\n    return (\r\n      <View key={index} style={{ margin: 10 }}>\r\n        <Text style={{ fontSize: 14 }}>{item.comment}</Text>\r\n        <Text style={{ fontSize: 12 }}>{item.rating} Stars</Text>\r\n        <Text style={{ fontSize: 12 }}>\r\n          {\"-- \" + item.author + \", \" + item.date}{\" \"}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card title=\"Comments\">\r\n      <FlatList\r\n        data={comments}\r\n        renderItem={renderCommentItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction RenderDish(props) {\r\n  const dish = props.dish;\r\n  if (dish != null) {\r\n    return (\r\n      <Card featuredTitle={dish.name} image={require(`./${dish.image}`)}>\r\n        <Text style={{ margin: 10 }}>{dish.description}</Text>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return <View></View>;\r\n  }\r\n}\r\n\r\nfunction main({ route }) {\r\n  const [comments] = useState(COMMENTS);\r\n\r\n  return (\r\n    <ScrollView>\r\n      <RenderDish dish={route.params.dish} />\r\n      <RenderComments\r\n        comments={comments.filter((comment) => comment.dishId === route.params.dish.id)}\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nexport default main;\r\n"]},"metadata":{},"sourceType":"module"}