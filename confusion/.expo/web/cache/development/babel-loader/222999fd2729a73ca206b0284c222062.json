{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + \"comments\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsLoading = function commentsLoading() {\n  return {\n    type: ActionTypes.COMMENTS_LOADING\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + \"dishes\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + \"promotions\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading());\n    return fetch(baseUrl + \"leaders\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return {\n    type: ActionTypes.LEADERS_LOADING\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\nexport var postFavorite = function postFavorite(dishId) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(addFavorite(dishId));\n    }, 2000);\n  };\n};\nexport var addFavorite = function addFavorite(dishId) {\n  return {\n    type: ActionTypes.ADD_FAVORITE,\n    payload: dishId\n  };\n};","map":{"version":3,"sources":["C:/desenvolvimento/workspace-estudo/ReactNative/confusion/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","fetchComments","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","comments","addComments","catch","commentsFailed","commentsLoading","type","COMMENTS_LOADING","COMMENTS_FAILED","payload","ADD_COMMENTS","fetchDishes","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFavorite","dishId","setTimeout","addFavorite","ADD_FAVORITE"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    dispatch(dishesLoading());\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((comments) => dispatch(addComments(comments)) )\r\n    .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsLoading = () => ({\r\n  type: ActionTypes.COMMENTS_LOADING,\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments,\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n  dispatch(dishesLoading());\r\n\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((dishes) => dispatch(addDishes(dishes)))\r\n    .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes,\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((promos) => dispatch(addPromos(promos)))\r\n    .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((leaders) => dispatch(addLeaders(leaders)))\r\n    .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders,\r\n});\r\n\r\nexport const postFavorite = (dishId)  => (dispatch) => {\r\n    setTimeout(() => {\r\n        dispatch(addFavorite(dishId));\r\n    }, 2000);\r\n};\r\n\r\n\r\nexport const addFavorite = (dishId) => ({\r\n    type: ActionTypes.ADD_FAVORITE,\r\n    payload: dishId\r\n});"]},"metadata":{},"sourceType":"module"}